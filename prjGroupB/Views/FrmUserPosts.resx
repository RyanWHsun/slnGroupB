<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnInsert.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAD1JREFUOE9jGAW4QCAUUw2chWKqgVEDiQegmIRpRsZfoRibHN7Yp7qBuABMM9XA
        qIGUA1BMkhWbwx4wMAAATD0mZdnnZy0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnDelete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABEAAAARCAYAAAA7bUf6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAOtJREFUOE/t0yFrAnEYx/H/wDIFByaNNpMgJmFRxGjZezAYfBFrvoGJopg2o23N
        pmPFMBiIBoPBIIoYVBD0+/B3x6M79ZrFH3y4Hw/c87+DO3MmL5hip4zxDE+JYIEBysoEI/jhmjTkdNGC
        nFxSM9GAzKtqloKTDfSje9WHkwSWaEOe6ppfDBHDUeZ4t9UE8WCreTpcfQjYarro2XocveQTWYQwkwHJ
        481Wb0vktXIIYyUDUkTd1vsSGZDbLHlFHI/4kAHJoGDr5SV/N1zLF1yXfEM+rAr033uqhjWa+JckfuD2
        o2lbdBAFMWYPBgRyunWGCf0AAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnUpdate.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAPxJREFUOE/NlDsOgkAURYla29hYGOOntNHYuAg/lStwESYmfhoTXIeNy9EFGOMS
        3IB6L/ASeDwG6DjJycwwM5d5BPCqRhvWw67NCm4d9qHQhU94gw1e0Czhz+EFCjX4gDJ3hamTHiEn13Cq
        HEOhGbUz+IHc84IsP8EJcnIUjGykzH0wCm92h4NgpMgL7EGehGvoDhKWb+IK1GGUYynfJCtQyoyHvWG8
        zFbUJrACi4Rt4CHsJtGBHWiVyfKFIfxC7k2hA/n6xMP0yQjXcq50oBVGSgWyZIZS9i1KBRbBGag/vUnU
        upTHwr0p8n4OLufQZAHP0C8o12aGVRHP+wOJ5m4yXTu5rwAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="btnFind.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EQAACxEBf2RfkQAAAgZJREFUOE+dlDFsUlEUhiWYupgO1uiC4cF7RcKsgy5EN6sTS3EyDuw6u+Dg2ETj
        YBwMiZtOmmgUHWSxSd1IGFrC1oSkMSWFobShKX7nvR94QUDkT/6ce/9zzn/vuzf3nRmH4zjxZDL5zHXd
        KvGY2IctxmX4IJPJLKn0n4jQ+AR2ZbKPQQV+YLxF7EnfhjfUMxURGt6qoc44l81mzyrnIxaLXSBXhIew
        S81dpf4GBbYzM/vued4yUiSRSNyj6SXaC+ZRvxCgXYO/YYfjuSp5BDszWxHWzSydTq9QXNECxqYWGQLt
        FjyFnySNQLNdQJ+YY2qfPjB7g1EGbbi7MKh7p75VSQEQq3Dfzsw+c2Cm9FRgdEeGjyQFQDiCPzS2M+tr
        ZzNB7SUt/kpSAK3yUePnsMlw4meGwaLnZFiSFAChBX9pGh2/gGlIpVIJM2QzG5ICIH5D7NntSpoL9BVk
        mJcUAOGhJWBR0jyI0leDbZ7ieWkBdBY78JBbvi55Jqh9qk3s0e9KHoHETWjPyV7AbcmTEJXZKXUN4glx
        d6KpnlpHxe/hGtpl+7voAgpoNaKdWwPtIvH+TNN4PJ6m4LM1TSKNbeIe0f4869YTNqXf8Y3GQXKVFR9T
        +BqWmG/AvF0Ac8+aYdg0L9OvvsH/YorpT8YHfsEiGJhqZ5uKX5ReDHZZmJRtZ2bmuu6VPxr6wdDNlUW2
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pcbUserPosts.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>32</value>
  </metadata>
</root>